const view=document.getElementById("view");const options=document.getElementById("options");if(view){view.className="panel"}if(options){options.className="panel"}const Base64_Header="data:image/svg+xml;base64,";const connectButton=document.getElementById("connect");const M=document.getElementById("M");const S=document.getElementById("S");const G=document.getElementById("G");const fontSize=document.getElementById("size");const textOffset=document.getElementById("offset");const updateButton=document.getElementById("update");const saveButton=document.getElementById("save");var owned;var pairs;var rememberMe;var rememberWhich;var currentVector;function update(context,vec=null,disable=false){let width=context.canvas.width;let height=context.canvas.height;context.clearRect(0,0,width,height);if(disable){updateButton.disabled=true;saveButton.disabled=true;saveButton.value="Edited recently!"}if(vec==null){return}let b64=EV.convert.toBase64(EV.vector.toSVG(currentVector,M.value,S.value,G.value,fontSize.value,textOffset.value,true));svg=Base64_Header+b64;let img=new Image(1e3,1e3);img.width=width/2;img.height=height/2;img.src=svg;img.onload=()=>{context.drawImage(img,0,0)}}let updateSelection=event=>{let id=event.currentTarget.value;rememberWhich="";const monthDifference=function monthDifference(oldDate){let a=new Date(oldDate);let b=new Date;return b.getMonth()-a.getMonth()};EV.proxy.readLocal(`item/${id}.json`,json=>{if(json===null){currentVector=null;rememberMe={};update(con,null,true);alert(`File for #${id} wasn't uploaded yet, tell @EarlyValentines!`)}else{rememberWhich=id;rememberMe=json;let b64=json.image.split(",")[1];let svg=EV.convert.toString(b64);currentVector=EV.vector.toVector(svg);let size=EV.vector.getFontSize(currentVector);fontSize.value=parseFloat(size);let parts=EV.vector.splitMessage(currentVector,size);if(parts.length>0){M.value=parts[0];S.value=parts[1];G.value=parts[2]}else{M.value="";S.value="";G.value=""}if(parts.length>2){textOffset.value=parts[3]}update(con,currentVector,false);updateButton.disabled=false;if(!("edits"in rememberMe)||monthDifference(rememberMe.edited)>=1){saveButton.disabled=false;saveButton.value="Save"}}})};var can=document.getElementById("editor");var con=can.getContext("2d");if(con){update(con)}let rememberWho="";let onchange=()=>{update(con,currentVector)};updateButton.onclick=onchange;let onconnect=()=>{let connect=document.getElementById("connect");connect.disabled=true;rememberWho="";EV.proxy.getAddress(wallet=>{let current=document.getElementById("current");current.innerText=EV.proxy.shorten(wallet);rememberWho=wallet.toString();EV.proxy.getTokens(wallet,tokens=>{currentVector=null;let which=document.getElementById("which");if(which){if(!which.onchange){which.onchange=updateSelection}which.innerHTML=""}else{which=document.createElement("select");which.id="which";which.onchange=updateSelection;document.body.appendChild(which)}owned=[];pairs={};if(tokens.length<1){which.style="display:none;";onchange()}else{let opt;for(let i=0;i<tokens.length;++i){opt=document.createElement("option");let text=tokens[i].toString();owned.push(text);opt.value=text;opt.innerText=text;which.appendChild(opt)}const e=new Event("change");which.dispatchEvent(e);which.style="display:inherit;"}connect.value="Reconnect";connect.disabled=false})})};connectButton.onclick=onconnect;let onsave=()=>{if(rememberMe==={}||rememberWhich.length<1){alert("Error: No EV open!")}else{EV.proxy.getLimit(EV.tree,response=>{if(response.status===200){let rate=response.resources.core;console.log(`Used: ${rate.used} / ${rate.limit}`);if(rate.remaining<1){alert("You need to wait, up to an hour, before you can continue!")}else{let eva=rememberMe;let which=document.getElementById("which").selectedOptions[0].value;if(which==null){alert("Error!");return}let svg=EV.vector.toSVG(currentVector,M.value,S.value,G.value,fontSize.value,textOffset.value);let b64=EV.convert.toBase64(svg);eva.image=`${Base64_Header}${b64}`;if("edits"in rememberMe){eva.edits=rememberMe.edits+1}else{eva.edits=1}eva.edited=(new Date).toISOString().match(/(.+)T.+/)[1];let msg=[M.value,S.value,G.value];let confirm="Edit to";if(msg[0].length>0){confirm+=` ${msg[0]}`}if(msg[1].length>0){confirm+=` ${msg[1]}`}if(msg[2].length>0){confirm+=` ${msg[2]}`}if(confirm.length=="Edit to".length){confirm="Clear"}confirm+=" ?";EV.proxy.sign(confirm,signed=>{if(signed===undefined){console.log("Save canceled")}else{eva.image=Base64_Header+b64;EV.proxy.verify(signed,confirm,result=>{let verified=rememberWho===result.toLowerCase();if(verified===false){alert("You do not own this EV.")}else{EV.proxy.get(`item/${rememberWhich}.json`,response=>{let sha=response.sha;EV.proxy.update(EV.tree,rememberWhich,"item/",sha,JSON.stringify(eva),EV.proxy.shorten(rememberWho),response=>{if(response.status<200||response.status>200){console.log(`Error ${response.status}:`,response.message);alert(`Error ${response.status} ocurred when saving, please inform @EarlyValentines`)}else{alert("Saved! Please refresh Metadata.")}})})}})}})}}})}};saveButton.onclick=onsave;
